{"version":3,"sources":["components/Navbar.js","components/About.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","About","myStyle","color","backgroundColor","mmyStyle","style","class","aria-labelledby","data-bs-parent","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","head","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalise","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.67ba5826.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link \" aria-current=\"page\" href=\"/\">Home</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/about\">About</a>\n          </li>\n          {/* <li className=\"nav-item dropdown\">\n            <Link className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Dropdown\n            </Link>\n            <ul className=\"dropdown-menu\">\n              <li><Link className=\"dropdown-item\" href=\"/\">Action</Link></li>\n              <li><Link className=\"dropdown-item\" href=\"/\">Another action</Link></li>\n              <li><hr className=\"dropdown-divider\"/></li>\n              <li><Link className=\"dropdown-item\" href=\"/\">Something else here</Link></li>\n            </ul>\n          </li> */}\n          {/* <li className=\"nav-item\">\n            <Link className=\"nav-link disabled\">Disabled</Link>\n          </li> */}\n\n        </ul>\n        {/* <form className=\"d-flex\" role=\"search\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\n        </form> */}\n\n<div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n</div>\n\n      </div>\n    </div>\n  </nav>\n  )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string //passed as an object\n}\n\n","import React, { useState } from 'react'\nexport default function About(props) {\n\n//     const [myStyle, setMyStyle] = useState({\n//         color:'black',\n//         backgroundColor:'white'\n//     })\n// const [btntext, setBtnText] = useState(\"Enable Dark Mode\")\n\nlet myStyle={\n    color: props.mode === 'dark'?'white':'black',\n    backgroundColor: props.mode === 'dark'?'#212529':'white',\n    // border: '2px solid white',\n    // borderColor: props.mode === 'dark'?'#white':'#212529'\n}\n\nlet mmyStyle={\n    color: props.mode === 'dark'?'white':'black',\n    backgroundColor: props.mode === 'dark'?'#151414':'white',\n}\n\n  return (\n        <div className=\"container my-2\" style={mmyStyle}>\n            <div className=\"headd mx-2\">\n            <h2 >About Us</h2>\n            </div>\n            \n            <div class=\"accordion\" id=\"accordionExample\">\n    <div class=\"accordion-item\" style={myStyle}>\n        <h2 class=\"accordion-header\" id=\"headingOne\">\n        <button class=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n        Feature 1\n        </button>\n        </h2>\n        <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n        <div class=\"accordion-body\">\n            <strong>User Friendly UI</strong> \n        </div>\n        </div>\n    </div>\n    <div class=\"accordion-item\" style={myStyle}>\n        <h2 class=\"accordion-header\" id=\"headingTwo\">\n        <button class=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n        Feature 2\n        </button>\n        </h2>\n        <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n        <div class=\"accordion-body\">\n            <strong> Browser Compatible</strong>\n        </div>\n        </div>\n    </div>\n    <div class=\"accordion-item\" style={myStyle}>\n        <h2 class=\"accordion-header\" id=\"headingThree\">\n        <button class=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n        Feature 3\n        </button>\n        </h2>\n        <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n        <div class=\"accordion-body\">\n            <strong>Analyses Text</strong>\n        </div>\n        </div>\n    </div>\n        </div>\n        </div>\n    )\n    }\n","import React, {useState} from 'react'  //use of hook\n\nexport default function Textform(props) {\n    const handleUpClick=() =>{\n        // console.log(\"Uppercase was clicked\" + text)\n        let newText=text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to UpperCase\",\"Success\")\n    }\n    const handleLowClick=() =>{\n      // console.log(\"Uppercase was clicked\" + text)\n      let newText=text.toLowerCase();\n      setText(newText)\n      props.showAlert(\"Converted to LowerCase\",\"Success\")\n  }\n  const handleCopy=()=>{\n    // console.log(\"I am copy\")\n    // var text= document.getElementById(\"mybox\")\n    // text.select();\n    // text.setSelectionRange(0,9999);\n    // navigator.clipboard.writeText(text.value);\n    // document.getSelection().removeAllRanges();\n\n// The above lines are not required while using navigator API\n\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"Copied to clipboard\", \"Success\")\n  }\n  const handleClear=()=>{\n    let newText='';\n    setText(newText);\n    props.showAlert(\"Cleared text\",\"Success\")\n  }\n    const handleUpChange=(event) =>{\n        // console.log(\"on change\")\n        setText(event.target.value);\n    }\n    const [text, setText] = useState(''); //*** \n  return (\n  <>\n                  <div className={`container text text-${props.mode === 'light'?'dark':'light'}`}>            \n                      <h1>{props.head}</h1>\n                      <div className=\"mb-3\">\n                      {/* <label htmlFor=\"mybox\" className=\"form-label\">{props.head}-{text}</label> */}\n                      <textarea className=\"form-control\" value={text} onChange={handleUpChange} id=\"mybox\" rows=\"8\" style= {{backgroundColor:props.mode === 'light'?'white':'rgba(var(--bs-dark-rgb)', color: props.mode === 'light'?'black':'white'}}></textarea> \n                </div> \n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to upper case</button>\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick}>Convert to lower case</button>\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClear}>Clear Text</button>\n    </div>\n<div className={`container my-4 text-${props.mode === 'light'?'dark':'light'}`}>\n  <h2>Text Summary</h2>\n  <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words {text.length} characters</p>\n  <p>Read in {0.008*(text.split(\" \").filter((element)=>{return element.length!==0}).length)} minutes</p>\n  <h2>Preview</h2>\n  <p>{text.length>0?text:\"Nothing to preview\"}</p>\n</div>\n    </>    \n  )\n}// on change was use to allow us to type and make the changes in already mentioned text\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalise=(word)=>{\n        const lower=word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\n    }\n  return (\n    <div style={{height:`60px`}}>\n       { props.alert && <div className= {`alert alert-success alert-dismissible fade show`} role=\"alert\">\n        <strong>{capitalise(props.alert.type)}</strong>: {props.alert.msg}\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\n        </div>}\n    </div>\n  )\n}\n\nexport default Alert","// import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport React, {useState} from 'react';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const[mode,setMode]= useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert =(message, type)=>{\n    setAlert({\n      msg:message,\n      type: type            //Alert is an object\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000);\n  }\n\n  const toggleMode=() =>{\nif(mode=== 'light'){\n  setMode('dark');\n  document.body.style.backgroundColor='#151414';\n  showAlert(\"Dark mode has been enabled\",`success`)\n  document.title='Text-Utils-- Dark Mode'\n\n  // setInterval(() => {\n  //   document.title='Text-Utils is amazing'\n  // }, 2000);\n  // setInterval(() => {\n  //   document.title='Text-Utils is installing...'\n  // }, 1300);\n\n// above mentioned for scam-y websites, gives prompts at regular intervals\n\n}\nelse{\n  setMode('light');\n  document.body.style.backgroundColor='white';\n  showAlert(\"Light mode has been enabled\",`success`)\n  document.title='Text-Utils-- Light Mode'\n}\n  }\n  return (\n    <>\n{/* <Router> */}\n    <Navbar title=\"Text-Utils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n      {/* <Routes>\n          <Route exact path=\"/about\"\n           element={ <About mode={mode}/>}/>\n          <Route exact path=\"/\"\n          element= {<Textform showAlert={showAlert} head=\"Enter your text\" mode={mode} toggleMode={toggleMode}/>}/>\n      </Routes>\n      </div>  \n</Router> */}\n<Textform showAlert={showAlert} head=\"Enter your text\" mode={mode} toggleMode={toggleMode}/>\n<About mode={mode}/>\n</div> \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}